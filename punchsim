repeat wait() until game:IsLoaded()

if getgenv().farmtype == "autofarm" then
local Notification = loadstring(game:HttpGet("https://api.irisapp.ca/Scripts/IrisBetterNotifications.lua"))()
getgenv()["IrisAd"] = true
Notification.Notify("Credits:", "Script by Jesus Christ (Christone101#4547)", "rbxasset://textures/ui/GuiImagePlaceholder.png", {
    Duration = 6,       
    Main = {
        Rounding = true,
    },
    GradientSettings = {
        GradientEnabled = false,
    SolidColorEnabled = true,
    SolidColor = Color3.fromRGB(0,0,0255),
    Retract = true
    }
});
   _G.autofarm = getgenv().start
   spawn(function()
   while _G.autofarm do
      local Remote = game.ReplicatedStorage['RemoteEvent']

      local Arguments = {
         [1] = {
            [1] = "WarpPlrToOtherMap",
            [2] = "Next"
         }
      }

      Remote:FireServer(unpack(Arguments))
      local Remote = game.ReplicatedStorage['RemoteEvent']

      local Arguments = {
         [1] = {
            [1] = "Activate_Punch"
         }
      }
      Remote:FireServer(unpack(Arguments))
      wait()
   end
   end)
   wait(8)
   while _G.autofarm do
      local s = game:GetService("Players")[game.Players.LocalPlayer.Name].leaderstats.WORLD.Value
      for i ,v in pairs(game:GetService("Workspace").Map.Stages.Boosts[s]:GetDescendants()) do
         if v:IsA("Part") then
            if v then
               game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
               wait(0.4)
            end
         end
      end
      wait(1)
   end
end
if getgenv().farmtype > 0 then
local Notification = loadstring(game:HttpGet("https://api.irisapp.ca/Scripts/IrisBetterNotifications.lua"))()
getgenv()["IrisAd"] = true
Notification.Notify("Credits:", "Script by Jesus Christ (Christone101#4547)", "rbxasset://textures/ui/GuiImagePlaceholder.png", {
    Duration = 6,       
    Main = {
        Rounding = true,
    },
    GradientSettings = {
        GradientEnabled = false,
    SolidColorEnabled = true,
    SolidColor = Color3.fromRGB(0,0,0255),
    Retract = true
    }
});
   _G.e = getgenv().start
   while _G.e do
      if game:GetService("Players")[game.Players.LocalPlayer.Name].leaderstats.WORLD.Value > getgenv().farmtype then
         local Remote = game.ReplicatedStorage['RemoteEvent']

         local Arguments = {
            [1] = {
               [1] = "WarpPlrToOtherMap",
               [2] = "Previous"
            }
         }

         Remote:FireServer(unpack(Arguments))
         wait(0.5)
      end
      if game:GetService("Players")[game.Players.LocalPlayer.Name].leaderstats.WORLD.Value < getgenv().farmtype then
         local Remote = game.ReplicatedStorage['RemoteEvent']

         local Arguments = {
            [1] = {
               [1] = "WarpPlrToOtherMap",
               [2] = "Next"
            }
         }

         Remote:FireServer(unpack(Arguments))
         wait(0.5)
      end
      if game:GetService("Players")[game.Players.LocalPlayer.Name].leaderstats.WORLD.Value == getgenv().farmtype then
         local b = getgenv().farmtype
         for i ,v in pairs(game:GetService("Workspace").Map.Stages.Boosts[b]:GetDescendants()) do
            if v:IsA("Part") then
               if v then
                  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
                  wait(0.4)
               end
            end
         end
      end
      wait()
   end
   wait()
end
